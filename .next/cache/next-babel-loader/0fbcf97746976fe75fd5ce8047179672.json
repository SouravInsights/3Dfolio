{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"G:\\\\Personal Projects\\\\VisiontoSpace Website\\\\pages\\\\piece.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useRef, useState, useEffect, Suspense } from \"react\";\nimport * as THREE from \"three\";\nimport { Canvas, useFrame, useLoader } from \"react-three-fiber\";\n/* import { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\"; */\n\n/* const loader = new GLTFLoader();\r\n\r\nloader.load(\r\n  \"/glb/piece.glb\",\r\n  function (gltf) {\r\n    scene.add(gltf.scene);\r\n  },\r\n  undefined,\r\n  function (error) {\r\n    console.error(error);\r\n  }\r\n); */\n\nvar GLTFLoader;\n\nvar Piece = function Piece(_ref) {\n  _s();\n\n  var speed = _ref.speed,\n      factor = _ref.factor,\n      url = _ref.url,\n      props = _objectWithoutProperties(_ref, [\"speed\", \"factor\", \"url\"]);\n\n  var gltf = useLoader(GLTFLoader, url);\n  var group = useRef();\n  return __jsx(\"group\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, __jsx(\"scene\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, __jsx(\"mesh\", {\n    visible: true,\n    geometry: nodes.Default.geometry,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, __jsx(\"meshStandardMaterial\", {\n    attach: \"material\",\n    color: \"white\",\n    roughness: 0.3,\n    metalness: 0.3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }))));\n};\n\n_s(Piece, \"PRh1HofwSJVIuOJGNpWCmCUMMno=\", false, function () {\n  return [useLoader];\n});\n\n_c = Piece;\n\nvar PiecePage = function PiecePage(props) {\n  _s2();\n\n  useEffect(function () {\n    GLTFLoader = require(\"three/examples/jsm/loaders/GLTFLoader\").GLTFLoader;\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Canvas, {\n    camera: {\n      position: [0, 0, 35]\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, __jsx(\"ambientLight\", {\n    intensity: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), __jsx(\"pointLight\", {\n    position: [40, 40, 40],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), __jsx(Suspense, {\n    fallback: null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, __jsx(Piece, {\n    url: \"/glb/\".concat(piece, \".glb\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }))));\n};\n\n_s2(PiecePage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c2 = PiecePage;\nexport default PiecePage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Piece\");\n$RefreshReg$(_c2, \"PiecePage\");","map":{"version":3,"sources":["G:/Personal Projects/VisiontoSpace Website/pages/piece.js"],"names":["React","useRef","useState","useEffect","Suspense","THREE","Canvas","useFrame","useLoader","GLTFLoader","Piece","speed","factor","url","props","gltf","group","nodes","Default","geometry","PiecePage","require","position","piece"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,EAA6CC,QAA7C,QAA6D,OAA7D;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,SAA3B,QAA4C,mBAA5C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,UAAJ;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAsC;AAAA;;AAAA,MAAnCC,KAAmC,QAAnCA,KAAmC;AAAA,MAA5BC,MAA4B,QAA5BA,MAA4B;AAAA,MAApBC,GAAoB,QAApBA,GAAoB;AAAA,MAAZC,KAAY;;AAClD,MAAMC,IAAI,GAAGP,SAAS,CAACC,UAAD,EAAaI,GAAb,CAAtB;AACA,MAAMG,KAAK,GAAGf,MAAM,EAApB;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,OAAO,MAAb;AAAc,IAAA,QAAQ,EAAEgB,KAAK,CAACC,OAAN,CAAcC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,MAAM,EAAC,UADT;AAEE,IAAA,KAAK,EAAC,OAFR;AAGE,IAAA,SAAS,EAAE,GAHb;AAIE,IAAA,SAAS,EAAE,GAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADF;AAcD,CAlBD;;GAAMT,K;UACSF,S;;;KADTE,K;;AAoBN,IAAMU,SAAS,GAAG,SAAZA,SAAY,CAACN,KAAD,EAAW;AAAA;;AAC3BX,EAAAA,SAAS,CAAC,YAAM;AACdM,IAAAA,UAAU,GAAGY,OAAO,CAAC,uCAAD,CAAP,CAAiDZ,UAA9D;AACD,GAFQ,EAEN,EAFM,CAAT;AAGA,SACE,4BACE,MAAC,MAAD;AAAQ,IAAA,MAAM,EAAE;AAAEa,MAAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP;AAAZ,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAc,IAAA,SAAS,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAY,IAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,MAAC,QAAD;AAAU,IAAA,QAAQ,EAAE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,GAAG,iBAAUC,KAAV,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHF,CADF,CADF;AAWD,CAfD;;IAAMH,S;;MAAAA,S;AAiBN,eAAeA,SAAf","sourcesContent":["import React, { useRef, useState, useEffect, Suspense } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { Canvas, useFrame, useLoader } from \"react-three-fiber\";\r\n/* import { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\"; */\r\n\r\n/* const loader = new GLTFLoader();\r\n\r\nloader.load(\r\n  \"/glb/piece.glb\",\r\n  function (gltf) {\r\n    scene.add(gltf.scene);\r\n  },\r\n  undefined,\r\n  function (error) {\r\n    console.error(error);\r\n  }\r\n); */\r\n\r\nlet GLTFLoader;\r\n\r\nconst Piece = ({ speed, factor, url, ...props }) => {\r\n  const gltf = useLoader(GLTFLoader, url);\r\n  const group = useRef();\r\n\r\n  return (\r\n    <group>\r\n      <scene>\r\n        <mesh visible geometry={nodes.Default.geometry}>\r\n          <meshStandardMaterial\r\n            attach=\"material\"\r\n            color=\"white\"\r\n            roughness={0.3}\r\n            metalness={0.3}\r\n          />\r\n        </mesh>\r\n      </scene>\r\n    </group>\r\n  );\r\n};\r\n\r\nconst PiecePage = (props) => {\r\n  useEffect(() => {\r\n    GLTFLoader = require(\"three/examples/jsm/loaders/GLTFLoader\").GLTFLoader;\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Canvas camera={{ position: [0, 0, 35] }}>\r\n        <ambientLight intensity={2} />\r\n        <pointLight position={[40, 40, 40]} />\r\n        <Suspense fallback={null}>\r\n          <Piece url={`/glb/${piece}.glb`} />\r\n        </Suspense>\r\n      </Canvas>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PiecePage;\r\n"]},"metadata":{},"sourceType":"module"}