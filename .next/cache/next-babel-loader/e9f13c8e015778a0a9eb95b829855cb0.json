{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"G:\\\\Personal Projects\\\\VisiontoSpace Website\\\\pages\\\\birds.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useRef, useState, useEffect, Suspense } from 'react';\nimport * as THREE from 'three';\nimport { Canvas, useFrame, useLoader } from 'react-three-fiber';\nvar GLTFLoader;\n\nvar Bird = function Bird(_ref) {\n  _s();\n\n  var speed = _ref.speed,\n      factor = _ref.factor,\n      url = _ref.url,\n      props = _objectWithoutProperties(_ref, [\"speed\", \"factor\", \"url\"]);\n\n  var gltf = useLoader(GLTFLoader, url);\n  var group = useRef();\n\n  var _useState = useState(function () {\n    return new THREE.AnimationMixer();\n  }),\n      mixer = _useState[0];\n\n  useEffect(function () {\n    return void mixer.clipAction(gltf.animations[0], group.current).play();\n  }, [gltf.animations, mixer]);\n  useFrame(function (state, delta) {\n    group.current.rotation.y += Math.sin(delta * factor / 2) * Math.cos(delta * factor / 2) * 1.5;\n    mixer.update(delta * speed);\n  });\n  return __jsx(\"group\", {\n    ref: group,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(\"scene\", _extends({\n    name: \"Scene\"\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), __jsx(\"mesh\", {\n    name: \"Object_0\",\n    morphTargetDictionary: gltf.__$[1].morphTargetDictionary,\n    morphTargetInfluences: gltf.__$[1].morphTargetInfluences,\n    rotation: [1.5707964611537577, 0, 0],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, __jsx(\"bufferGeometry\", _extends({\n    attach: \"geometry\"\n  }, gltf.__$[1].geometry, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  })), __jsx(\"meshStandardMaterial\", _extends({\n    attach: \"material\"\n  }, gltf.__$[1].material, {\n    name: \"Material_0_COLOR_0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  })))));\n};\n\n_s(Bird, \"+YLeu6OGcun+19X/HsCdLaLEp30=\", false, function () {\n  return [useLoader, useFrame];\n});\n\n_c = Bird;\n\nvar Birds = function Birds() {\n  return new Array(5).fill().map(function (_, i) {\n    var x = (15 + Math.random() * 30) * (Math.round(Math.random()) ? -1 : 1);\n    var y = -10 + Math.random() * 20;\n    var z = -5 + Math.random() * 10;\n    var bird = ['stork', 'parrot', 'flamingo'][Math.round(Math.random() * 2)];\n    var speed = bird === 'stork' ? 0.5 : bird === 'flamingo' ? 2 : 5;\n    var factor = bird === 'stork' ? 0.5 + Math.random() : bird === 'flamingo' ? 0.25 + Math.random() : 1 + Math.random() - 0.5;\n    return __jsx(Bird, {\n      key: i,\n      position: [x, y, z],\n      rotation: [0, x > 0 ? Math.PI : 0, 0],\n      speed: speed,\n      factor: factor,\n      url: \"/glb/\".concat(bird, \".glb\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    });\n  });\n};\n\n_c2 = Birds;\n\nvar BirdsPage = function BirdsPage(props) {\n  _s2();\n\n  useEffect(function () {\n    GLTFLoader = require('three/examples/jsm/loaders/GLTFLoader').GLTFLoader;\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Canvas, {\n    camera: {\n      position: [0, 0, 35]\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, __jsx(\"ambientLight\", {\n    intensity: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), __jsx(\"pointLight\", {\n    position: [40, 40, 40],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), __jsx(Suspense, {\n    fallback: null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, __jsx(Birds, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }))));\n};\n\n_s2(BirdsPage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c3 = BirdsPage;\nexport default BirdsPage;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Bird\");\n$RefreshReg$(_c2, \"Birds\");\n$RefreshReg$(_c3, \"BirdsPage\");","map":{"version":3,"sources":["G:/Personal Projects/VisiontoSpace Website/pages/birds.js"],"names":["React","useRef","useState","useEffect","Suspense","THREE","Canvas","useFrame","useLoader","GLTFLoader","Bird","speed","factor","url","props","gltf","group","AnimationMixer","mixer","clipAction","animations","current","play","state","delta","rotation","y","Math","sin","cos","update","__$","morphTargetDictionary","morphTargetInfluences","geometry","material","Birds","Array","fill","map","_","i","x","random","round","z","bird","PI","BirdsPage","require","position"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect, Suspense } from 'react'\nimport * as THREE from 'three'\nimport { Canvas, useFrame, useLoader } from 'react-three-fiber'\n\nlet GLTFLoader\n\nconst Bird = ({ speed, factor, url, ...props }) => {\n  const gltf = useLoader(GLTFLoader, url)\n  const group = useRef()\n  const [mixer] = useState(() => new THREE.AnimationMixer())\n  useEffect(\n    () => void mixer.clipAction(gltf.animations[0], group.current).play(),\n    [gltf.animations, mixer]\n  )\n  useFrame((state, delta) => {\n    group.current.rotation.y +=\n      Math.sin((delta * factor) / 2) * Math.cos((delta * factor) / 2) * 1.5\n    mixer.update(delta * speed)\n  })\n  return (\n    <group ref={group}>\n      <scene name=\"Scene\" {...props}>\n        <mesh\n          name=\"Object_0\"\n          morphTargetDictionary={gltf.__$[1].morphTargetDictionary}\n          morphTargetInfluences={gltf.__$[1].morphTargetInfluences}\n          rotation={[1.5707964611537577, 0, 0]}\n        >\n          <bufferGeometry attach=\"geometry\" {...gltf.__$[1].geometry} />\n          <meshStandardMaterial\n            attach=\"material\"\n            {...gltf.__$[1].material}\n            name=\"Material_0_COLOR_0\"\n          />\n        </mesh>\n      </scene>\n    </group>\n  )\n}\n\nconst Birds = () => {\n  return new Array(5).fill().map((_, i) => {\n    const x = (15 + Math.random() * 30) * (Math.round(Math.random()) ? -1 : 1)\n    const y = -10 + Math.random() * 20\n    const z = -5 + Math.random() * 10\n    const bird = ['stork', 'parrot', 'flamingo'][Math.round(Math.random() * 2)]\n    let speed = bird === 'stork' ? 0.5 : bird === 'flamingo' ? 2 : 5\n    let factor =\n      bird === 'stork'\n        ? 0.5 + Math.random()\n        : bird === 'flamingo'\n        ? 0.25 + Math.random()\n        : 1 + Math.random() - 0.5\n    return (\n      <Bird\n        key={i}\n        position={[x, y, z]}\n        rotation={[0, x > 0 ? Math.PI : 0, 0]}\n        speed={speed}\n        factor={factor}\n        url={`/glb/${bird}.glb`}\n      />\n    )\n  })\n}\n\nconst BirdsPage = props => {\n  useEffect(() => {\n    GLTFLoader = require('three/examples/jsm/loaders/GLTFLoader').GLTFLoader\n  }, [])\n  return (\n    <>\n      <Canvas camera={{ position: [0, 0, 35] }}>\n        <ambientLight intensity={2} />\n        <pointLight position={[40, 40, 40]} />\n        <Suspense fallback={null}>\n          <Birds />\n        </Suspense>\n      </Canvas>\n    </>\n  )\n}\n\nexport default BirdsPage\n"]},"metadata":{},"sourceType":"module"}